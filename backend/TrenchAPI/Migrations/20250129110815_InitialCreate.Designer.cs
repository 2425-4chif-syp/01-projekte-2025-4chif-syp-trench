// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrenchAPI.Context;

#nullable disable

namespace TrenchAPI.Migrations
{
    [DbContext(typeof(WebDbContext))]
    [Migration("20250129110815_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrenchAPI.Models.Messeinstellung", b =>
                {
                    b.Property<int>("MesseinstellungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MesseinstellungId"));

                    b.Property<int>("SpuleId")
                        .HasColumnType("integer");

                    b.Property<decimal>("bemessungsFrequenz")
                        .HasColumnType("decimal(8,3)");

                    b.Property<decimal>("bemessungsSpannung")
                        .HasColumnType("decimal(8,3)");

                    b.Property<decimal>("messStärke")
                        .HasColumnType("decimal(8,3)");

                    b.Property<int>("sondenProSchenkel")
                        .HasColumnType("int");

                    b.Property<DateTime>("zeitstempel")
                        .HasColumnType("datetime");

                    b.HasKey("MesseinstellungId");

                    b.HasIndex("SpuleId");

                    b.ToTable("Messeinstellung", (string)null);
                });

            modelBuilder.Entity("TrenchAPI.Models.Spule", b =>
                {
                    b.Property<int>("SpuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpuleID"));

                    b.Property<int>("AuftragsPosNr")
                        .HasColumnType("int");

                    b.Property<int>("Auftragsnummer")
                        .HasColumnType("int");

                    b.Property<int>("Einheit")
                        .HasColumnType("int");

                    b.Property<int>("SpuleTypId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Ur")
                        .HasColumnType("decimal(8,3)");

                    b.Property<decimal>("omega")
                        .HasColumnType("decimal(8,5)");

                    b.HasKey("SpuleID");

                    b.ToTable("Spule", (string)null);
                });

            modelBuilder.Entity("TrenchAPI.Models.SpuleTyp", b =>
                {
                    b.Property<int>("SpuleTypId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpuleTypId"));

                    b.Property<int>("BB")
                        .HasColumnType("int");

                    b.Property<int>("SH")
                        .HasColumnType("int");

                    b.Property<int>("Schenkel")
                        .HasColumnType("int");

                    b.Property<string>("TK_Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("dm")
                        .HasColumnType("int");

                    b.HasKey("SpuleTypId");

                    b.ToTable("SpuleTyp", (string)null);
                });

            modelBuilder.Entity("TrenchAPI.Models.Messeinstellung", b =>
                {
                    b.HasOne("TrenchAPI.Models.Spule", "Spule")
                        .WithMany()
                        .HasForeignKey("SpuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Spule");
                });
#pragma warning restore 612, 618
        }
    }
}
